--[[==========================================================

   1. specify any colours and load textures & load fonts

  ==========================================================]]
  
-- colours by name
addColour( "red",              "0xFF0000FF" );
addColour( "pink",             "0xFF7F7FFF" );
addColour( "dark-red",         "0x8F2020FF" );
addColour( "border-light",     "0xFFFFFF66" );
addColour( "border-norm",      "0x7F7F7F66" );
addColour( "border-dark",      "0x00000066" );
addColour( "background-light", "0xFFFFFF3F" );
addColour( "background-norm",  "0x7F7F7F6F" );
addColour( "background-dark",  "0x3F3F3F9F" );
addColour( "white",            "0xFFFFFFFF" );
addColour( "black",            "0x000000FF" );
addColour( "grey",             "0x7F7F7FFF" );

-- textures by name
-- background and borders...
local dir = "/data/gui/textures/";
loadTexture( "button-bg",             dir.."button_bg.png"             );
loadTexture( "button-small-bg",       dir.."button_small_bg.png"       );
loadTexture( "button-trim",           dir.."button_trim.png"           );
loadTexture( "button-bg-grey",        dir.."button_bg_grey.png"        );
loadTexture( "button-small-bg-grey",  dir.."button_small_bg_grey.png"  );

-- overlays
loadTexture( "close-button-norm",     dir.."close_button_norm.png"     );
loadTexture( "close-button-hover",    dir.."close_button_hover.png"    );
loadTexture( "down-arrow-norm",       dir.."down_arrow_norm.png"       );
loadTexture( "down-arrow-hover",      dir.."down_arrow_hover.png"      );
loadTexture( "up-arrow-norm",         dir.."up_arrow_norm.png"         );
loadTexture( "up-arrow-hover",        dir.."up_arrow_hover.png"        );
loadTexture( "left-arrow-norm",       dir.."left_arrow_norm.png"       );
loadTexture( "left-arrow-hover",      dir.."left_arrow_hover.png"      );
loadTexture( "right-arrow-norm",      dir.."right_arrow_norm.png"      );
loadTexture( "right-arrow-hover",     dir.."right_arrow_hover.png"     );
loadTexture( "roll-up-norm",          dir.."roll_up_norm.png"          );
loadTexture( "roll-up-hover",         dir.."roll_up_hover.png"         );
loadTexture( "roll-down-norm",        dir.."roll_down_norm.png"        );
loadTexture( "roll-down-hover",       dir.."roll_down_hover.png"       );
loadTexture( "expand-norm",           dir.."expand_norm.png"           );
loadTexture( "expand-hover",          dir.."expand_hover.png"          );
loadTexture( "shrink-norm",           dir.."shrink_norm.png"           );
loadTexture( "shrink-hover",          dir.."shrink_hover.png"          );

-- yes/no/maybe overlays
loadTexture( "green-tick",            dir.."green_tick.png"            );
loadTexture( "red-cross",             dir.."red_cross.png"             );
loadTexture( "orange-question",       dir.."orange_question.png"       );

-- mouse cursors
loadTexture( "mouse-set",             dir.."mouse.png"                 );

-- set 'special' textures
-- mouse
setMouseTexture("mouse-set");
-- overlays
setOverlayTexture( "tick",      "green-tick"       );
setOverlayTexture( "cross",     "red-cross"        );
setOverlayTexture( "question",  "orange-question"  );

-- load fonts
dir = "/data/gui/fonts/";
loadFont( "tin-dog",    dir.."TinDog.ttf", 18 );
loadFont( "sans",       dir.."LiberationSans-Regular.ttf",  10 );
loadFont( "dumbledore", dir.."dum1.ttf",   28 );

-- set default fonts
setDefaultFont( "menu",   "tin-dog"     );
setDefaultFont( "fancy",  "dumbledore"  );
setDefaultFont( "game",   "sans"        );

--[[==========================================================

   2. Styles for widgets

  ==========================================================]]

-- some predefined ones (potentially common to many types...)
Bare = {
	Default = {
		Borders = { Type = "none" },
		Background = { Type = "none" },
		Font = { "tin-dog", "normal" }
	}
}

Embedded = {
	Default = {
		Borders = {
			Type = "embed",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-light", "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Font = { "tin-dog", "normal" }
	}
}

Raised = {
	Default = {
		Borders = {
			Type = "raise",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-light", "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Font = { "tin-dog", "normal" }
	}
}

SolidOutline = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = { Type = "none" },
		Font = { "tin-dog", "normal" }
	}
}

Solid = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-norm" }
		},
		Font = { "tin-dog", "normal" }
	}
}

-- common borders and backgrounds for buttons

buttonBorders = {
	Type = "texture",
	Texture = "button-trim",
	Sizes = { 3, 6 } -- border, corner	
}

buttonBackground = {
	Type = "texture",
	Texture = "button-bg"
}

smallButtonBackground = {
	Type = "texture",
	Texture = "button-small-bg"
}

smallButtonBackgroundGrey = {
	Type = "texture",
	Texture = "button-small-bg-grey"
}


-- default font

defaultFont = {
	Name = "tin-dog",
	Size = "normal",
	Colour = "white",
	Shadow = false
}

-- oscillating white high-light 

whiteOscillatingHighLight = {
	Type = "oscillate",
	Colour = "white"
}

-- StaticWidgets [StaticText ('Labels') and StaticImage]
-----------------
StaticWidget = Bare;

StaticWidget.Borders = {
	Type = "solid",
	Sizes = { 1, 1, 1, 1 },
	Colours = { "red" }
}

-- Buttons
-----------
Button = {}
Button.Default = {
	Borders = buttonBorders,
	Background = buttonBackground,
	Font = defaultFont
}
Button.States = {
	Disabled = { 
		Background = {
			Type = "texture",
			Texture = "button-bg-grey"
		},
		Font = { Colour = "grey" }
	},
	Hover = {
		HighLight = {
			Type = "oscillate",
			Colour = "white"
		}
	}
}

CheckBox = {}
CheckBox.UnChecked = {
	Default = { -- default state #1 (Un-Checked)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "red-cross"
	},

	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey,
			overlay = ""
		},
		Hover = { -- hover state, add 'high-light'
			HighLight = whiteOscillatingHighLight
		}
	}
}

CheckBox.Checked = {
	Default = { -- default state #2 (Checked)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "green-tick"
	},

	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey,
			overlay = ""
		},
		Hover = { -- hover state, add 'high-light'
			HighLight = whiteOscillatingHighLight
		}
	}
}

TextBox = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Font = { "tin-dog", "normal" }
	},

	States = {
		Focused = {
			Borders = {
				Colours = { "border-light" }
			}
		},
		
		Hover = {
			Borders = {
				Colours = { "border-norm" }
			}
		}
	}
}

ListItem = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "dark-red" }
		},
		Background = {
			Type = "colour",
			Colours = { "red" }
		},
		Font = { "tin-dog", "normal" }
	},

	States = {
		Focused = {
			Borders = {
				Colours = { "dark-red" }
			},
			HighLight = {
				Type = "fixed",
				Colour = "white"
			}
		},
		Hover = {
			Borders = {
				Colours = { "pink" }
			},
			HighLight = whiteOscillatingHighLight
		}
	}
}


ListBox = Embedded;

DropList = SolidOutline;

ScrollBar = Embedded;

Slider = Bare;

TitleBar = Embedded;

MessageBox = Raised;

ToolTip = Solid;

ScrollBarButtonUp = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "up-arrow-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "up-arrow-hover"
		}
	}
}

ScrollBarButtonDown = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "down-arrow-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "down-arrow-hover"
		}
	}
}

ScrollBarButtonLeft = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "left-arrow-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "left-arrow-hover"
		}
	}
}

ScrollBarButtonRight = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "right-arrow-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "right-arrow-hover"
		}
	}
}

ScrollBarVerticalShaft = Embedded;

ScrollBarVerticalThumb = Raised;

ScrollBarHorizontalShaft = Embedded;

ScrollBarHorizontalThumb = Raised;

SliderThumb = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight
		}
	}
}

SliderVerticalThumb = SliderThumb;

SliderVerticalShaft = Raised;

SliderHorizontalThumb = SliderThumb;

SliderHorizontalShaft = Raised;

TitleBarCloseButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "close-button-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "close-button-hover"
		}
	}
}

TitleBarRollUpButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "roll-up-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "roll-up-hover"
		}
	}
}

TitleBarRollDownButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "roll-down-norm"
	},
	States = {
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "roll-down-hover"
		}
	}
}

TitleBarExpandButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "expand-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "expand-hover"
		}
	}
}

TitleBarShrinkButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = "shrink-norm"
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = "shrink-hover"
		}
	}
}

