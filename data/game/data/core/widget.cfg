--[[==========================================================

   1. specify any colours and load textures & fonts

  ==========================================================]]
  
-- colours by name
addColour( "red",              "0xFF0000FF" );
addColour( "pink",             "0xFF7F7FFF" );
addColour( "pink-tint",        "0xFF7F7F7F" );
addColour( "dark-red",         "0x8F0000FF" );
addColour( "dark-green",       "0x005B00FF" );
addColour( "dark-blue",        "0x00009FFF" );
addColour( "red-tint",         "0xFF20207F" );
addColour( "dark-red-tint",    "0xAF20207F" );

addColour( "border-light",     "0xFFFFFF66" );
addColour( "border-norm",      "0x7F7F7F66" );
addColour( "border-dark",      "0x00000066" );
addColour( "border-tint",      "0x00000066" );

addColour( "background-tint",  "0x00000066" );
addColour( "background-light", "0xFFFFFF3F" );
addColour( "background-norm",  "0x7F7F7F6F" );
addColour( "background-dark",  "0x3F3F3F9F" );
addColour( "white",            "0xFFFFFFFF" );
addColour( "white-tint",       "0xFFFFFF7F" );
addColour( "black",            "0x000000FF" );
addColour( "dark-grey",        "0x3F3F3FFF" );
addColour( "grey",             "0x7F7F7FFF" );
addColour( "light-grey",       "0xBFBFBFFF" );

addColour( "brown-light",      "0x4C3B1AFF" );
addColour( "brown-medium",     "0x3F2B00FF" );
addColour( "brown-dark",       "0x251900FF" );

-- textures by name
-- background and borders...
local dir = "/data/gui/textures/";
loadTexture( "button-bg",             dir.."button_bg.png"             );
loadTexture( "button-small-bg",       dir.."button_small_bg.png"       );
loadTexture( "button-trim",           dir.."button_trim.png"           );
loadTexture( "button-bg-grey",        dir.."button_bg_grey.png"        );
loadTexture( "button-small-bg-grey",  dir.."button_small_bg_grey.png"  );

-- overlays
loadTexture( "close-button-norm",     dir.."close_button_norm.png"     );
loadTexture( "close-button-hover",    dir.."close_button_hover.png"    );
loadTexture( "down-arrow-norm",       dir.."down_arrow_norm.png"       );
loadTexture( "down-arrow-hover",      dir.."down_arrow_hover.png"      );
loadTexture( "down-arrow-disable",    dir.."down_arrow_disable.png"    );
loadTexture( "up-arrow-norm",         dir.."up_arrow_norm.png"         );
loadTexture( "up-arrow-hover",        dir.."up_arrow_hover.png"        );
loadTexture( "up-arrow-disable",      dir.."up_arrow_disable.png"      );
loadTexture( "left-arrow-norm",       dir.."left_arrow_norm.png"       );
loadTexture( "left-arrow-hover",      dir.."left_arrow_hover.png"      );
loadTexture( "right-arrow-norm",      dir.."right_arrow_norm.png"      );
loadTexture( "right-arrow-hover",     dir.."right_arrow_hover.png"     );
loadTexture( "roll-up-norm",          dir.."roll_up_norm.png"          );
loadTexture( "roll-up-hover",         dir.."roll_up_hover.png"         );
loadTexture( "roll-down-norm",        dir.."roll_down_norm.png"        );
loadTexture( "roll-down-hover",       dir.."roll_down_hover.png"       );
loadTexture( "expand-norm",           dir.."expand_norm.png"           );
loadTexture( "expand-hover",          dir.."expand_hover.png"          );
loadTexture( "shrink-norm",           dir.."shrink_norm.png"           );
loadTexture( "shrink-hover",          dir.."shrink_hover.png"          );
loadTexture( "textbox-bg",            dir.."text_box_bg.png"           );
loadTexture( "text-bg",               dir.."text_bg.png"               );
loadTexture( "frame-trim",            dir.."frame_trim.png"            );

-- yes/no/maybe overlays
loadTexture( "green-tick",            dir.."green_tick.png"            );
loadTexture( "red-cross",             dir.."red_cross.png"             );
loadTexture( "orange-question",       dir.."orange_question.png"       );

-- mouse cursors
loadTexture( "mouse-set",             dir.."mouse.png"                 );

-- set 'special' textures
-- mouse
setMouseTexture("mouse-set");
-- overlays
setOverlayTexture( "tick",      "green-tick"       );
setOverlayTexture( "cross",     "red-cross"        );
setOverlayTexture( "question",  "orange-question"  );

-- load fonts
dir = "/data/gui/fonts/";
--loadFont( "tin-dog",      dir.."TinDog.ttf",      18 );
loadFont( "serif-big",    dir.."FreeSerif.otf",     18 );
loadFont( "serif",        dir.."FreeSerif.otf",     12 );
loadFont( "sans-big",     dir.."FreeSans.otf",      16 );
loadFont( "sans",         dir.."FreeSans.otf",      12 );
loadFont( "mono",         dir.."FreeMono.otf",      10 );
loadFont( "code",         dir.."FreeMonoBold.otf",  12 );
loadFont( "fancy",        dir.."dum1.ttf",          28 );
loadFont( "fancy-wide",   dir.."dum1wide.ttf",      24 );
loadFont( "fancy-small",  dir.."dum1.ttf",          18 );

-- set default fonts
setDefaultFont( "menu",   "sans-big"  );
setDefaultFont( "fancy",  "fancy"     );
setDefaultFont( "game",   "sans"      );

--[[==========================================================

   2. Styles for widgets

  ==========================================================]]

-- very common text style
defaultText = {
	Font = "sans-big",
	Colour = "white",
	Shadow = true,
	ShadowColour = "black"
}

-- some predefined ones (potentially common to many types...)
Bare = {
	Default = {
		Borders = { Type = "none" },
		Background = { Type = "none" },
		Text = defaultText
	}
}

Embedded = {
	Default = {
		Borders = {
			Type = "embed",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-light", "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Text = defaultText
	}
}

Raised = {
	Default = {
		Borders = {
			Type = "raise",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-light", "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Text = defaultText
	}
}

SolidOutline = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = { Type = "none" },
		Text = defaultText
	}
}

-- common borders and backgrounds for buttons

buttonBorders = {
	Type = "texture",
	Texture = "button-trim",
	Sizes = { 3, 6 } -- border, corner	
}

buttonBackground = {
	Type = "texture",
	Texture = "button-bg"
}

smallButtonBackground = {
	Type = "texture",
	Texture = "button-small-bg"
}

smallButtonBackgroundGrey = {
	Type = "texture",
	Texture = "button-small-bg-grey"
}

-- oscillating white high-light 

whiteOscillatingHighLight = {
	Type = "oscillate",
	Colour = "white"
}

whiteTintFixedHighLight = {
	Type = "fixed",
	Colour = "white-tint"
}

-- StaticWidgets [StaticText ('Labels') and StaticImage]
-----------------
StaticWidget = Bare;

StaticWidget.Borders = {
	Type = "solid",
	Sizes = { 1, 1, 1, 1 },
	Colours = { "red" }
}

-- Buttons
-----------
Button = {
	Default = {
		Borders = buttonBorders,
		Background = buttonBackground,
		Text = defaultText
	},
	States = {
		Disabled = { 
			Background = {
				Type = "texture",
				Texture = "button-bg-grey"
			},
			Text = { Colour = "grey" }
		},
		Hover = {
			HighLight = {
				Type = "oscillate",
				Colour = "white"
			}
		}
	}
}

CheckBox = {}

CheckBox.UnChecked = {
	Default = { -- default state #1 (Un-Checked)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "red-cross",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey,
			Overlay = { Texture = "" }
		},
		Hover = { -- hover state, add 'high-light'
			HighLight = whiteOscillatingHighLight
		}
	}
}

CheckBox.Checked = {
	Default = { -- default state #2 (Checked)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "green-tick",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey,
			Overlay = { Texture = "" }
		},
		Hover = { -- hover state, add 'high-light'
			HighLight = whiteOscillatingHighLight
		}
	}
}

TextBox = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Text = defaultText
	},

	States = {
		Focused = {
			Borders = {
				Colours = { "border-light" }
			}
		},
		
		Hover = {
			Borders = {
				Colours = { "border-norm" }
			}
		}
	}
}

ListItem = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Text = defaultText
	},

	States = {
		Selected = {
			Borders = {
				Colours = { "border-light" }
			},
			--HighLight = whiteTintFixedHighLight
		},
		Focus = {
			Borders = {
				Colours = { "border-light" }
			},
			HighLight = whiteTintFixedHighLight
		},
		Hover = {
			Borders = {
				Colours = { "border-norm" }
			},
			HighLight = whiteOscillatingHighLight
		}
	}
}

ListBox = Embedded;

DropList = {
	Default = SolidOutline.Default,
}

ScrollBar = Embedded;

Slider = Bare;

TitleBar = {
	Default = {
		Borders = { Type = "none" },
		Background = {
			Type = "custom_colours",
			Colours = { "brown-dark", "brown-dark", "brown-light", "brown-medium" }
		},
		Text = defaultText
	}
}

MessageBox = {
	Default = {
		Borders = {
			Type = "texture",
			Texture = "frame-trim",
			Sizes = { 3, 3 } -- border, corner	
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Text = defaultText
	}
}

ScrollBarButtonUp = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "up-arrow-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey,
			Overlay = { Texture = "up-arrow-disable" }
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "up-arrow-hover" }
		}
	}
}

ScrollBarButtonDown = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "down-arrow-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey,
			Overlay = { Texture = "down-arrow-disable" }
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texure = "down-arrow-hover" }
		}
	}
}

ScrollBarButtonLeft = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "left-arrow-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "left-arrow-hover" }
		}
	}
}

ScrollBarButtonRight = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "right-arrow-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "right-arrow-hover" }
		}
	}
}

sbEmbed = {
	Default = {
		Borders = {
			Type = "embed",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "pink-tint", "darl-red-tint" }
		},
		Background = {
			Type = "colour",
			Colours = { "red-tint" }
		},
		Font = { "sans-big", "normal" }
	}
}

ScrollBarVerticalShaft = Embedded;

ScrollBarVerticalThumb = Raised;

ScrollBarHorizontalShaft = Embedded;

ScrollBarHorizontalThumb = Raised;

SliderThumb = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight
		}
	}
}

SliderVerticalThumb = SliderThumb;

SliderVerticalShaft = Embedded;

SliderHorizontalThumb = SliderThumb;

SliderHorizontalShaft = Embedded;

TitleBarCloseButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "close-button-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "close-button-hover" }
		}
	}
}

TitleBarRollUpButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "roll-up-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "roll-up-hover" }
		}
	}
}

TitleBarRollDownButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "roll-down-norm",
			InsideBorders = true
		}
	},
	States = {
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "roll-down-hover" }
		}
	}
}

TitleBarExpandButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "expand-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "expand-hover" }
		}
	}
}

TitleBarShrinkButton = {
	Default = { -- default borders and background (for all states)
		Borders = buttonBorders,
		Background = smallButtonBackground,
		Overlay = {
			Texture = "shrink-norm",
			InsideBorders = true
		}
	},
	States = {
		Disabled = { 
			Background = smallButtonBackgroundGrey
		},
		Hover = {
			HighLight = whiteOscillatingHighLight,
			Overlay = { Texture = "shrink-hover" }
		}
	}
}

ColourPicker = {
	Default = {
		Borders = {
			Type = "solid",
			Colours = { "background-dark" },
			Sizes = { 2, 2, 2, 2 }
		},
		Background = { Type = "none" }
	}
}

ColourButton = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 4, 4, 4, 4 },
			Colours = { "border-norm" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		}
	},
	
	States = {
		Hover = {
			HighLight = whiteOscillatingHighLight,
		}
	}
}

TickerTape = {
	Default = {
		Borders = { Type = "none" },
		Background = { Type = "none" },
		Text = {
			Font = "serif-big",
			Colour = "white"
		}
	}
}

InfoWidget = {
	Default = {
		Borders    = { Type = "none" },
		Background = { Type = "none" },
		Text = {
			Font = "serif-big",
			Colour = "white"
		}
	}
}

Logger = {
	Default = {
		Borders = { Type = "none"},
		Background = { Type = "none"},
	},
	Header = {
		Default = {
			Borders = { Type = "none" },
			Background = { Type = "none" },
			Text = {
				Font = "serif-big",
				Colour = "white",
				Shadow = "true",
				ShadowColour = "black"
			}
		}
	},
	LogLine = {
		Default = {
			Borders = { Type = "none" },
			Background = { Type = "none" },
			Text = {
				Font = "serif",
				Colour = "white",
				Shadow = "true",
				ShadowColour = "black"
			}
		}
	}
}

gameWidget = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 4, 20, 4, 4 },
			Colours = { "border-tint" }
		},
		Background = { Type = "none" },
		Text = {
			Font = "sans",
			Colour = "white"
		}
	}
}

ResourceBar = gameWidget;

MiniMap = gameWidget;

Display = gameWidget;

Console = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "colour",
			Colour = { "background-norm" }
		},
		Text = {
			Font = "sans",
			Colour = "white"
		}
	}
}


ToolTip = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 3, 3, 3, 3 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "texture",
			Texture = "text-bg"
		},
	},
	
	Header = {
		Default = {
			Borders = {
				Type = "invisible",
				Sizes = { 2, 2, 2, 10 }
			},
			Background = { Type = "none" },
			Text = { Font = "fancy-wide", Colour = "black" }
		}
	},
	Main = {
		Default = {
			Borders = {
				Type = "invisible",
				Sizes = { 2, 2, 2, 2 },
			},
			Background = { Type = "none" },
			Text = { Font = "serif", Colour = "black" }
		}
	},
	Item = {
		Default = {
			Borders = {
				Type = "invisible",
				Sizes = { 2, 2, 2, 2 },
			},
			Background = { Type = "none" },
			Text = {
				Font = "serif",
				Colour = "dark-blue",
				--Shadow = true,
				--ShadowColour = "black"
			}
		}	
	},
	RequirementMet = {
		Default = {
			Borders = {
				Type = "invisible",
				Sizes = { 2, 2, 2, 2 },
			},
			Background = { Type = "none" },
			Text = {
				Font = "serif",
				Colour = "dark-green",
				--Shadow = true,
				--ShadowColour = "black"
			}
		}
	},
	RequirementNotMet = {
		Default = {
			Borders = {
				Type = "invisible",
				Sizes = { 2, 2, 2, 2 },
			},
			Background = { Type = "none" },
			Text = {
				Font = "serif",
				Colour = "dark-red",
				--Shadow = true,
				--ShadowColour = "black"
			}
		}
	}
}


TestWidget = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "texture",
			Texture = "text-bg"
		},
	},
	
	Header = {
		Default = {
			Borders = { Type = "none" },
			Background = { Type = "none" },
			Text = { Font = "fancy-wide", Colour = "black" }
		}
	},
	MainBit = {
		Default = {
			Borders = { Type = "none" },
			Background = { Type = "none" },
			Text = { Font = "fancy-small", Colour = "black" }
		}
	},
	CodeBit = {
		Default = {
			Borders = { Type = "none" },
			Background = { Type = "none" },
			Text = { Font = "code", Colour = "black" }
		}
	}	
}

codeText = {
	Font = "code",
	Colour = "white"
}

CodeView = {
	Default = {
		Borders = {
			Type = "embed",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-light", "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Text = codeText
	}
}

CodeEdit = {
	Default = {
		Borders = {
			Type = "solid",
			Sizes = { 2, 2, 2, 2 },
			Colours = { "border-dark" }
		},
		Background = {
			Type = "colour",
			Colours = { "background-dark" }
		},
		Text = codeText
	},
	States = {
		Focus = {
			Borders = { Colours = { "border-light" } }
		},		
		Hover = {
			Borders = { Colours = { "border-norm" } }
		}
	}
}

GameStats = {
	Default = {
		Borders = { Type = "none" },
		Background = { Type = "none" },
		Text = {
			Font = "code",
			Colour = "white",
			Shadow = true,
			ShadowColour = "black"
		}
	}
}

